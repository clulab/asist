vars: org/clulab/asist/grammars/vars.yml

rules:
  - import: org/clulab/asist/grammars/ent_template.yml
    vars:
      name: fire
      priority: ${ rulepriority }
      label: Fire
      trigger: ${ fire_triggers }

  - import: org/clulab/asist/grammars/ent_template.yml
    vars:
      name: foe
      priority: ${ rulepriority }
      label: Foe
      trigger: ${ foe_triggers }

  - import: org/clulab/asist/grammars/ent_template.yml
    vars:
      name: person
      priority: ${ rulepriority }
      label: Person
      trigger: ${ person_triggers }

  - import: org/clulab/asist/grammars/ent_template.yml
    vars:
      name: victim
      priority: ${ rulepriority }
      label: Victim
      trigger: ${ victim_triggers }

  - import: org/clulab/asist/grammars/ent_template.yml
    vars:
      name: rubble
      priority: ${ rulepriority }
      label: Rubble
      trigger: ${ rubble_triggers }

  - name: all_nps
    priority: ${ rulepriority }
    label: Concept
    type: token
    keep: false
    pattern: |
      [chunk=/B-NP/ & !tag=DT] [chunk=/I-NP/]*

  - name: numbers
    priority: ${ rulepriority }
    label: Number
    type: token
    pattern: |
      (?<! other) [tag=CD]

  - name: deictic_detection
    priority: ${ rulepriority }
    label: Deictic
    type: token
    pattern: |
      [lemma=/(?i)^${ deixis_triggers }/] (?! [lemma=be]) # prevent "There is..."

  # minecraft door switch, e.g.
  - name: switch
    priority: ${ rulepriority }
    label: Switch
    type: token
    keep: true
    pattern: |
      [lemma=/(?i)(${ switch_triggers })/ & tag=/^N/]

  - name: self_token_capture
    label: Self
    priority: ${ rulepriority }
    type: token
    keep: true
    pattern: |
      [lemma=/(?i)^(${ self_triggers })$/ & tag=/PRP/]

  - name: you_token_capture
    label: You
    priority: ${ rulepriority }
    type: token
    keep: true
    pattern: |
      [lemma=/(?i)^(${ you_triggers })$/ & tag=/PRP/]

  - name: we_token_capture
    label: Team
    priority: ${ rulepriority }
    type: token
    keep: true
    pattern: |
      [lemma=/(?i)^(${ team_triggers })/ & tag=/PRP/]

  - name: them_token_capture
    label: Entity
    examples: "it, they, them"
    priority: ${ rulepriority }
    type: token
    keep: true
    pattern: |
      [lemma=/(?i)^it\b|they|them/ & tag=/PRP/]

  - name: green
    label: Green
    priority: ${ rulepriority }
    type: token
    keep: false
    pattern: |
      [lemma=/(?i)^(green)/]

  - name: yellow
    label: Yellow
    priority: ${ rulepriority }
    type: token
    keep: false
    pattern: |
      [lemma=/(?i)^(yellow)/]

  - name: question_particle
    label: QuestionParticle
    priority: ${ rulepriority }
    type: token
    keep: false
    pattern: |
      [tag=/^W/]

  - name: demonstrative_pronoun
    priority: ${ rulepriority }
    label: DemPron
    type: token
    keep: false
    pattern: |
      [word=/${ dem_pron_triggers }/]

  - name: pro-form-etc
    priority: ${ rulepriority }
    label: Entity
    type: token
    keep: false
    pattern: |
      others | other (?! [tag=/^N|CD/]) | (?<= other) [tag=/CD|^N/]

